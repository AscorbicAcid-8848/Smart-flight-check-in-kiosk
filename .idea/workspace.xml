<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
<<<<<<< Updated upstream
    <list default="true" id="f4f7db67-aaf2-4a5f-920b-4ef1efac5f5d" name="Changes" comment="" />
=======
    <list default="true" id="4de0406d-b89f-4247-a694-e31b8d592f29" name="Changes" comment="including (Mock classes, Service classes, test classes, and json data), this version now has ability to read data from json(Mock), change data(service), insert data(service), search data by key attribute(service), write json(appending or reset) using Mock, all the data that u read from json will be store in service object, and when u want to save u can call service's method &quot;toJSON&quot;, to store what u have as json. All the method that u communicates with data are included in service classes. so the way that classes communicates are front-side &lt;--&gt; controller(functionality) &lt;--&gt; service(data manipulation) &lt;--&gt; mock (create fake data or write data as json) &lt;--&gt; json(eternal data storage), also I implement some test class using TDD principle. &#10;&#10;Zihao" />
>>>>>>> Stashed changes
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
<<<<<<< Updated upstream
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
=======
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="JUnit3 Test Class" />
        <option value="JUnit4 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/test/java/mock/FlightMockTest.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../../../../My PC/Documents/temp/PassengerServiceImp.java" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/src/main/java/service/imp/PassengerServiceImp.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/test/java/service/imp/PassengerServiceImpTest.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/main/java/mock/FlightMock.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/test/java/mock/PassengerMockTest.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/main/java/mock/PassengerMock.java" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/main/java/model/Passenger.java" root0="FORCE_HIGHLIGHTING" />
  </component>
>>>>>>> Stashed changes
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
<<<<<<< Updated upstream
  <component name="ProjectId" id="28HuZRwcVd1nl0PzUjlvxVLeLbP" />
=======
  <component name="MavenRunner">
    <option name="delegateBuildToMaven" value="true" />
    <option name="vmOptions" value="-DarchetypeCatalog=internal -Dfile.encoding=GB2312" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="270Rx6pyi9V65KPqDFkZ4kpY26j" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
>>>>>>> Stashed changes
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
<<<<<<< Updated upstream
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
=======
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="Downloaded.Files.Path.Enabled" value="false" />
    <property name="Repository.Attach.Annotations" value="false" />
    <property name="Repository.Attach.JavaDocs" value="false" />
    <property name="Repository.Attach.Sources" value="false" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit4" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit3" value="junit.framework.TestCase" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4" value="" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../../../My PC/Desktop/Material_Theme_UI-6.8.0.1.zip" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.17" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\yeeeeezy\Dropbox\My PC (子一十)\Documents\GitHub\Smart-flight-check-in-kiosk\src\main\java\mock" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\yeeeeezy\Dropbox\My PC (子一十)\Documents\GitHub\Smart-flight-check-in-kiosk" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
      <recent name="junit.framework.TestCase" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="service.imp" />
      <recent name="mock" />
      <recent name="TDD" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.AirlineServiceImpTest.toJSON">
    <configuration name="AirlineMockTest.toJSON" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="XXXManagementSystem" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="mock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="mock" />
      <option name="MAIN_CLASS_NAME" value="mock.AirlineMockTest" />
      <option name="METHOD_NAME" value="toJSON" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AirlineServiceImpTest.toJSON" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="XXXManagementSystem" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="service.imp.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="service.imp" />
      <option name="MAIN_CLASS_NAME" value="service.imp.AirlineServiceImpTest" />
      <option name="METHOD_NAME" value="toJSON" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FlightMockTest.toJSON" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="XXXManagementSystem" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="mock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="mock" />
      <option name="MAIN_CLASS_NAME" value="mock.FlightMockTest" />
      <option name="METHOD_NAME" value="toJSON" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FlightServiceImpTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="XXXManagementSystem" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="service.imp.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="service.imp" />
      <option name="MAIN_CLASS_NAME" value="service.imp.FlightServiceImpTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PassengerMockTest.toJSON" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="XXXManagementSystem" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="mock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="mock" />
      <option name="MAIN_CLASS_NAME" value="mock.PassengerMockTest" />
      <option name="METHOD_NAME" value="toJSON" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.AirlineServiceImpTest.toJSON" />
        <item itemvalue="JUnit.PassengerMockTest.toJSON" />
        <item itemvalue="JUnit.AirlineMockTest.toJSON" />
        <item itemvalue="JUnit.FlightMockTest.toJSON" />
        <item itemvalue="JUnit.FlightServiceImpTest" />
      </list>
    </recent_temporary>
>>>>>>> Stashed changes
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
<<<<<<< Updated upstream
      <changelist id="f4f7db67-aaf2-4a5f-920b-4ef1efac5f5d" name="Changes" comment="" />
      <created>1650885896808</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1650885896808</updated>
      <workItem from="1650885897040" duration="10000" />
      <workItem from="1650886075079" duration="36000" />
    </task>
=======
      <changelist id="4de0406d-b89f-4247-a694-e31b8d592f29" name="Changes" comment="" />
      <created>1648455261907</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1648455261907</updated>
      <workItem from="1648455265458" duration="939000" />
      <workItem from="1648517768238" duration="1223000" />
      <workItem from="1648629409677" duration="700000" />
      <workItem from="1648700517843" duration="741000" />
      <workItem from="1648712642853" duration="509000" />
      <workItem from="1649848359287" duration="1448000" />
      <workItem from="1650074931445" duration="767000" />
      <workItem from="1650076049954" duration="2524000" />
      <workItem from="1650197334980" duration="889000" />
      <workItem from="1650331532958" duration="826000" />
      <workItem from="1650353267906" duration="1163000" />
      <workItem from="1650629881200" duration="1607000" />
      <workItem from="1650631514043" duration="2975000" />
      <workItem from="1650716436091" duration="3143000" />
      <workItem from="1650727273086" duration="11750000" />
      <workItem from="1650777130743" duration="64000" />
      <workItem from="1650777211290" duration="152000" />
      <workItem from="1650777383860" duration="2438000" />
      <workItem from="1650786069395" duration="960000" />
      <workItem from="1650787058582" duration="422000" />
      <workItem from="1650787506673" duration="1062000" />
      <workItem from="1650788608668" duration="1590000" />
      <workItem from="1650790623096" duration="130000" />
      <workItem from="1650790778585" duration="2629000" />
      <workItem from="1650793594580" duration="257000" />
      <workItem from="1650793875265" duration="193000" />
      <workItem from="1650794090280" duration="81000" />
      <workItem from="1650794192749" duration="745000" />
      <workItem from="1650794964503" duration="144000" />
      <workItem from="1650795346933" duration="687000" />
      <workItem from="1650796059267" duration="253000" />
      <workItem from="1650796488441" duration="362000" />
      <workItem from="1650796890781" duration="51000" />
      <workItem from="1650849969940" duration="239000" />
      <workItem from="1650852786356" duration="2883000" />
      <workItem from="1650856329130" duration="4279000" />
      <workItem from="1650864774746" duration="1318000" />
      <workItem from="1650866227074" duration="1486000" />
      <workItem from="1650867743387" duration="1170000" />
      <workItem from="1650868959434" duration="577000" />
      <workItem from="1650869562116" duration="86000" />
      <workItem from="1650869673467" duration="402000" />
      <workItem from="1650870092373" duration="50000" />
      <workItem from="1650870164196" duration="66000" />
      <workItem from="1650870250458" duration="5625000" />
      <workItem from="1650876081965" duration="10000" />
      <workItem from="1650881864991" duration="3825000" />
    </task>
    <task id="LOCAL-00001" summary="just try github desktop">
      <created>1648456191693</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1648456191693</updated>
    </task>
    <task id="LOCAL-00002" summary="delete previous test comment">
      <created>1648712745649</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1648712745649</updated>
    </task>
    <task id="LOCAL-00003" summary="Zihao Ye(just for backup, not completed), will update new version soon">
      <created>1650792201532</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1650792201532</updated>
    </task>
    <task id="LOCAL-00004" summary="Zihao Ye(just for backup, not completed), will update new version soon">
      <created>1650796527314</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1650796527314</updated>
    </task>
    <task id="LOCAL-00005" summary="Zihao Ye(just for backup, not completed), will update new version soon">
      <created>1650796540507</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1650796540507</updated>
    </task>
    <task id="LOCAL-00006" summary="including (Mock classes, Service classes, test classes, and json data), this version now has ability to read data from json(Mock), change data(service), insert data(service), search data by key attribute(service), write json(appending or reset) using Mock, all the data that u read from json will be store in service object, and when u want to save u can call service's method &quot;toJSON&quot;, to store what u have as json. All the method that u communicates with data are included in service classes. so the way that classes communicates are front-side &lt;--&gt; controller(functionality) &lt;--&gt; service(data manipulation) &lt;--&gt; mock (create fake data or write data as json) &lt;--&gt; json(eternal data storage), also I implement some test class using TDD principle. &#10;&#10;Zihao">
      <created>1650885732844</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1650885732844</updated>
    </task>
    <option name="localTasksCounter" value="7" />
>>>>>>> Stashed changes
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
<<<<<<< Updated upstream
=======
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="just try github desktop" />
    <MESSAGE value="delete previous test comment" />
    <MESSAGE value="Zihao Ye(just for backup, not completed), will update new version soon" />
    <MESSAGE value="including (Mock classes, Service classes, test classes, and json data), this version now has ability to read data from json(Mock), change data(service), insert data(service), search data by key attribute(service), write json(appending or reset) using Mock, all the data that u read from json will be store in service object, and when u want to save u can call service's method &quot;toJSON&quot;, to store what u have as json. All the method that u communicates with data are included in service classes. so the way that classes communicates are front-side &lt;--&gt; controller(functionality) &lt;--&gt; service(data manipulation) &lt;--&gt; mock (create fake data or write data as json) &lt;--&gt; json(eternal data storage), also I implement some test class using TDD principle. &#10;&#10;Zihao" />
    <option name="LAST_COMMIT_MESSAGE" value="including (Mock classes, Service classes, test classes, and json data), this version now has ability to read data from json(Mock), change data(service), insert data(service), search data by key attribute(service), write json(appending or reset) using Mock, all the data that u read from json will be store in service object, and when u want to save u can call service's method &quot;toJSON&quot;, to store what u have as json. All the method that u communicates with data are included in service classes. so the way that classes communicates are front-side &lt;--&gt; controller(functionality) &lt;--&gt; service(data manipulation) &lt;--&gt; mock (create fake data or write data as json) &lt;--&gt; json(eternal data storage), also I implement some test class using TDD principle. &#10;&#10;Zihao" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/service/imp/FlightServiceImp.java</url>
          <line>119</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/service/imp/FlightServiceImpTest.java</url>
          <line>33</line>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
>>>>>>> Stashed changes
</project>